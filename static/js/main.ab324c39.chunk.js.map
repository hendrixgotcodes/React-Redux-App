{"version":3,"sources":["logo.svg","actions/types.js","components/posts.js","actions/postAction.js","components/postform.js","components/Header.js","reducers/postReducer.js","reducers/index.js","Store.js","App.js","index.js"],"names":["FETCH_POSTS","NEW_POST","Posts","this","props","fetchPosts","nextProps","newPost","posts","unshift","postItems","map","post","className","title","body","id","Component","connect","state","items","item","dispatch","fetch","then","res","json","data","type","payload","PostForm","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","sendPost","htmlFor","cols","rows","method","headers","JSON","stringify","resData","Header","initialState","combineReducers","action","middleware","thunk","createStore","rootReducer","applyMiddleware","App","store","Store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab324c39.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const NEW_POST = \"NEW_POST\";","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPosts} from '../actions/postAction';\r\n\r\nclass Posts extends Component {\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.fetchPosts();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.newPost){\r\n\r\n            this.props.posts.unshift(nextProps.newPost)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const postItems = this.props.posts.map(post=> (\r\n\r\n            <div className=\"post\" key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </div>\r\n\r\n        ))\r\n\r\n        return (\r\n            <div>\r\n                <h2>Posts</h2>\r\n                {postItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n\r\n    return(\r\n\r\n       {\r\n\r\n            posts: state.posts.items,\r\n            newPost: state.posts.item\r\n\r\n       }\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPosts})(Posts)","import {FETCH_POSTS, NEW_POST} from './types';\r\n\r\nexport function fetchPosts(){\r\n\r\n    return function(dispatch){\r\n\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n\r\n            type: FETCH_POSTS,\r\n            payload: data\r\n\r\n        }))\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function sendPost(data){\r\n\r\n    return function(dispatch){\r\n\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n\r\n            method: \"POST\",\r\n            headers: {\r\n\r\n                \"content-type\": \"application/json\"\r\n\r\n            },\r\n            body: JSON.stringify(data)\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(resData => dispatch({\r\n\r\n            type: NEW_POST,\r\n            payload: resData\r\n\r\n        }))\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {sendPost} from '../actions/postAction';\r\n\r\nclass PostForm extends Component {\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            title: '',\r\n            body: ''\r\n\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e){\r\n\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    onSubmit(e){\r\n\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n\r\n            title: this.state.title,\r\n            body: this.state.body\r\n\r\n        }\r\n\r\n        this.props.sendPost(post)\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <form className=\"form\" onSubmit={this.onSubmit}>\r\n\r\n                <h2>Make a post</h2>\r\n\r\n                <label htmlFor=\"title\" className=\"formLabel\">\r\n\r\n                    Title:\r\n                    <input name=\"title\" type=\"text\" id=\"title\" onChange={this.onChange}/>\r\n\r\n                </label>\r\n\r\n                <label htmlFor=\"body\" className=\"formLabel\">\r\n                    Body:\r\n                    <textarea name=\"body\" id=\"body\" cols=\"30\" rows=\"10\" onChange={this.onChange}></textarea>\r\n                </label>\r\n\r\n                <button type=\"submit\" className=\"btn_submit\">submit</button>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {sendPost})(PostForm)","import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n\r\n                <h1>Fondling With React-Redux</h1>\r\n                <p>Making a simple post and get using react-redux for state management</p>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {FETCH_POSTS, NEW_POST} from '../actions/types';\r\n\r\nconst initialState = {\r\n\r\n    items: [],\r\n    item: {}\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action){\r\n\r\n    switch(action.type){\r\n\r\n        case FETCH_POSTS:\r\n            return({\r\n\r\n                ...state,\r\n                items: action.payload\r\n\r\n            }) \r\n        case NEW_POST:\r\n            return({\r\n                ...state,\r\n                item: action.payload\r\n            })\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport PostReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n    posts: PostReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\n\r\nexport default createStore(rootReducer, initialState, applyMiddleware(...middleware))","import logo from './logo.svg';\nimport Posts from './components/posts';\nimport PostForm from './components/postform';\nimport Header from './components/Header';\nimport {Provider} from 'react-redux';\nimport Store from './Store';\n\nfunction App() {\n\n\n  return (\n\n    \n    <Provider store={Store}>\n\n      <div className=\"App\">\n\n        {<Header/>}\n\n        {<PostForm/>}\n\n        <Posts/>\n\n      </div>\n\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/base/reset.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}